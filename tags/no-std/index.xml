<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>No-Std on un01s notes</title>
    <link>https://un01s.github.io/notes/tags/no-std/</link>
    <description>Recent content in No-Std on un01s notes</description>
    <generator>Hugo -- 0.125.7</generator>
    <language>en</language>
    <lastBuildDate>Thu, 20 Feb 2025 10:26:20 -0700</lastBuildDate>
    <atom:link href="https://un01s.github.io/notes/tags/no-std/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>no-std Rust</title>
      <link>https://un01s.github.io/notes/posts/20250220/</link>
      <pubDate>Thu, 20 Feb 2025 10:26:20 -0700</pubDate>
      <guid>https://un01s.github.io/notes/posts/20250220/</guid>
      <description>feature no_std std heap (dynamic memory) note 1 yes collections (Vec, BTreeMap, etc.) note 2 yes stack overflow protection no yes run init code before main no yes libstd no yes libcore yes yes firmware, kernel or bootloader yes no note 1: only if you use the alloc crate and use a suitable allocator like alloc-cortex-m
note 2: only if you use the collections crate and configure a global default allocator.</description>
    </item>
  </channel>
</rss>
